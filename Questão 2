<aura:component implements="force:appHostable,flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId" access="global" >
    <aura:attribute name="Num1"   type="Decimal"  description="PrimeiroNum"></aura:attribute>
    <aura:attribute name="Num2"   type="Decimal"  description="SegundoNum"></aura:attribute>
    <aura:attribute name="Result" type="Decimal"  description="ResultFinal"></aura:attribute>
    
    <div class="slds-box slds-theme_default">
    <div>        
        <h1>Número 1</h1>       
        <lightning:input type="number" name="numeroUm" value="{! v.Num1 }"/>        
    </div>
    
    <div>
        <h1>Número 2</h1>        
        <lightning:input type="number" name="numeroDois" value="{! v.Num2 }"/>        
    </div>    
    
    <div>
        <h1>Resultado</h1>
        <lightning:input type="number" name="Resultado" value="{! v.Result }"/>        
    </div>
    
    <div>
       <lightning:button variant="brand-outline" label="Somar" title="Somar" onclick="{! c.sum}"/>
       <lightning:button variant="brand-outline" label="Subtrair" title="Subtrair" onclick="{! c.subtract}" />
       <lightning:button variant="brand-outline" label="Multiplicar" title="Multiplicar" onclick="{! c.multiply}" />
       <lightning:button variant="brand-outline" label="Dividir" title="Dividir" onclick="{! c.divide}"/>
    </div>
    </div>
    
</aura:component>

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
({
    sum : function(component, event, helper) {
        var Num1 = component.get("v.Num1");
        var Num2 = component.get("v.Num2");
        var Result = parseFloat(Num1) + parseFloat(Num2);
        component.set("v.Result", Result);
    },
    
    subtract : function(component, event, helper) {
        var Num1 = component.get("v.Num1");
        var Num2 = component.get("v.Num2");
        var Result = parseFloat(Num1) - parseFloat(Num2);
        component.set("v.Result", Result);
    },
    
    multiply : function(component, event, helper) {
        var Num1 = component.get("v.Num1");
        var Num2 = component.get("v.Num2");
        var Result = parseFloat(Num1) * parseFloat(Num2);
        component.set("v.Result", Result);
    },
    
    divide : function(component, event, helper) {
        var Num1 = component.get("v.Num1");
        var Num2 = component.get("v.Num2");
        var Result = parseFloat(Num1) / parseFloat(Num2);
        component.set("v.Result", Result);
    }
})
